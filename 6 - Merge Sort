#include <iostream>
#include <vector>
using namespace std;

void mesclar(vector<int>& vetor, int inicio, int meio, int fim) {
    int n1 = meio - inicio + 1;
    int n2 = fim - meio;

    vector<int> vetorEsquerda(n1), vetorDireita(n2);

    for (int i = 0; i < n1; i++) {
        vetorEsquerda[i] = vetor[inicio + i];
    }
    for (int j = 0; j < n2; j++) {
        vetorDireita[j] = vetor[meio + 1 + j];
    }

    int i = 0, j = 0, k = inicio;
    while (i < n1 && j < n2) {
        if (vetorEsquerda[i] <= vetorDireita[j]) {
            vetor[k] = vetorEsquerda[i];
            i++;
        } else {
            vetor[k] = vetorDireita[j];
            j++;
        }
        k++;
    }

    while (i < n1) {
        vetor[k] = vetorEsquerda[i];
        i++;
        k++;
    }

    while (j < n2) {
        vetor[k] = vetorDireita[j];
        j++;
        k++;
    }
}

void mergeSort(vector<int>& vetor, int inicio, int fim) {
    if (inicio < fim) {
        int meio = inicio + (fim - inicio) / 2;

        mergeSort(vetor, inicio, meio);
        mergeSort(vetor, meio + 1, fim);

        mesclar(vetor, inicio, meio, fim);
    }
}

void imprimirVetor(const vector<int>& vetor) {
    for (int numero : vetor) {
        cout << numero << " ";
    }
    cout << endl;
}

int main() {
    vector<int> vetor = {38, 27, 43, 3, 9, 82, 10};

    cout << "Vetor original: ";
    imprimirVetor(vetor);

    mergeSort(vetor, 0, vetor.size() - 1);

    cout << "Vetor ordenado: ";
    imprimirVetor(vetor);

    return 0;
}
